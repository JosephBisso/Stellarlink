name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    env:
      VCINSTALLDIR: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/
      Qt5_DIR: ${{ github.workspace }}\build\Qt\${{ matrix.qt_ver }}\${{ matrix.config.qt_arch_install }}\lib\cmake\Qt5\
      QTDIR: ${{ github.workspace }}\build\Qt\${{ matrix.qt_ver }}\${{ matrix.config.qt_arch_install }}\
      # 2020.07
      VCPKG_VERSION: 56fffbe49dfb4dd8fae0940f272c5fd2b86be991
      VCPKG_PACKAGES: openssl-windows
      OPENSSL_ROOT_DIR: ${{ github.workspace }}\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}\
    strategy:
      fail-fast: false
      matrix:
        qt_ver: [6.1.0]
        qt_target: [desktop]
        config: {
            arch: x64,
            generator: "-G'Visual Studio 16 2019' -A x64",
            vcpkg_triplet: x64-windows,
            qt_arch: win64_msvc2019_64,
            qt_arch_install: msvc2019_64,
            pak_arch: win64
          }
        type: [portable, installer]

    steps:
    - uses: actions/checkout@v2

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgArguments: ${{env.VCPKG_PACKAGES}}
        vcpkgDirectory: '${{ github.workspace }}\vcpkg'
        appendedCacheKey: ${{ matrix.config.vcpkg_triplet }}
        vcpkgGitCommitId: ${{ env.VCPKG_VERSION }}
        vcpkgTriplet: ${{ matrix.config.vcpkg_triplet }}
    
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ./build/Qt/${{ matrix.qt_ver }}/${{ matrix.config.qt_arch_install }}
        key: ${{ runner.os }}-QtCache/${{ matrix.qt_ver }}/${{ matrix.config.qt_arch }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_ver }}
        target:  ${{ matrix.qt_target }}
        arch: ${{ matrix.config.qt_arch }}
        dir: '${{ github.workspace }}/build/'
        modules: 'qtscript'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Configure
      working-directory: build
      shell: pwsh
      run: |
        cmake ..

    - name: Compile
      working-directory: build
      shell: pwsh
      run: cmake --build . --target stellarlink